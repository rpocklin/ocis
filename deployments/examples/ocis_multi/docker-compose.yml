---
version: "3.7"

services:
  # traefik:
  #   networks:
  #     ocis-net:
  #       aliases:
  #         - ${OCIS_DOMAIN:-ocis.owncloud.test}
  #   depends_on:
  #     - proxy
  #   extends:
  #       file: docker-compose.base.yml
  #       service: traefik

  traefik:
    image: traefik:v2.5
    networks:
      ocis-net:
        aliases:
          - ${OCIS_DOMAIN:-ocis.owncloud.test}
    depends_on:
      - proxy
    command:
      - "--log.level=${TRAEFIK_LOG_LEVEL:-ERROR}"
      # letsencrypt configuration
      - "--certificatesResolvers.http.acme.email=${TRAEFIK_ACME_MAIL:-example@example.org}"
      - "--certificatesResolvers.http.acme.storage=/certs/acme.json"
      - "--certificatesResolvers.http.acme.httpChallenge.entryPoint=http"
      # enable dasbhoard
      - "--api.dashboard=true"
      # define entrypoints
      - "--entryPoints.http.address=:80"
      - "--entryPoints.http.http.redirections.entryPoint.to=https"
      - "--entryPoints.http.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.https.address=:443"
      # docker provider (get configuration from container labels)
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"   # redirects to 443
      - "443:443" # main exposed port
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "certs:/certs"
    labels:
      - "traefik.enable=${TRAEFIK_DASHBOARD:-false}"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH_USERS:-admin:$$apr1$$4vqie50r$$YQAmQdtmz5n9rEALhxJ4l.}" # defaults to admin:admin
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN:-traefik.owncloud.test}`)"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.routers.traefik.tls.certresolver=http"
      - "traefik.http.routers.traefik.service=api@internal"
    logging:
      driver: "local"
    restart: always


  # ocis:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
       #     OCIS_RUN_EXTENSIONS: settings,storage-metadata,graph,graph-explorer,ocs,store,thumbnails,web,webdav,storage-frontend,storage-gateway,storage-userprovider,storage-groupprovider,storage-authbasic,storage-authbearer,storage-authmachine,storage-users,storage-shares,storage-public-link,storage-appprovider,storage-sharing,proxy
       #     OCIS_COMMAND: server

  #depends on storage-metadata
  # accounts:
  #   # network_mode: host # fixes network issue
  #   # network_mode: default
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   depends_on:
  #     - storage-metadata
  #   entrypoint:
  #     - /bin/sh
  #     - /entrypoint-override.wait.sh # requires SERVICE_PRECONDITION defined in environment
  #   environment:
  #     OCIS_COMMAND: accounts
  #     SERVICE_PRECONDITION: "storage-metadata.owncloud.test:9215"
  #     ACCOUNTS_LOG_LEVEL: "debug"

  #     # required to connect to storage-metadata service as a dependency
  #     ACCOUNTS_STORAGE_CS3_PROVIDER_ADDR: "storage-metadata.owncloud.test:9215"

  #     # GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
  #     # GRPC_GO_LOG_SEVERITY_LEVEL: "info"
  #     # STORAGE_METADATA_LOG_LEVEL: "debug"
  # storage-metadata:
  #   # network_mode: host
  #   # network_mode: default
  #   networks:
  #     ocis-net:
  #       aliases:
  #         - storage-metadata.owncloud.test
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   depends_on:
  #     - storage-gateway
  #   entrypoint:
  #     - /bin/sh
  #     - /entrypoint-override.wait.sh # requires SERVICE_PRECONDITION defined in environment
  #   ports:
  #    - "9215:9215"
  #   environment:
  #     OCIS_COMMAND: storage-metadata
  #     SERVICE_PRECONDITION: "storage-gateway.owncloud.test:9142"

  #     # required to connect to storage-gateway service as a dependency
  #     REVA_GATEWAY: "storage-gateway.owncloud.test:9142"

  #     # GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
  #     # GRPC_GO_LOG_SEVERITY_LEVEL: "info"
  #     # STORAGE_METADATA_LOG_LEVEL: "debug"

  #     # required to allow accounts to access this service
  #     STORAGE_METADATA_GRPC_PROVIDER_ADDR: "0.0.0.0:9215"
  # storage-gateway:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   networks:
  #     ocis-net:
  #       aliases:
  #         - storage-gateway.owncloud.test
  #   environment:
  #     OCIS_COMMAND: storage-gateway

  #     # required to allow storage-metadata to access this service
  #     STORAGE_GATEWAY_GRPC_ADDR: "0.0.0.0:9142"
  glauth:
    networks:
      ocis-int:
    extends:
        file: docker-compose.base.yml
        service: ocis
    environment:
      OCIS_COMMAND: glauth
  # #graph
  idp:
    ## TODO: depends on glauth????
    networks:
      ocis-int:
        aliases:
          - idp.owncloud.test
    extends:
        file: docker-compose.base.yml
        service: ocis
    environment:
      IDP_HTTP_ADDR: "0.0.0.0:9130"
      OCIS_COMMAND: idp
    ports:
      - "9130:9130"
  # ocs:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: ocs
  # settings:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: settings
    # # requires access to glauth and accounts
  #storage-app-provider
  #storage-groupprovider
  #storage-sharing
  # storage-frontend:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: storage-frontend
  # storage-userprovider:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: storage-userprovider
  # storage-auth-basic:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: storage-auth-basic
  # storage-auth-bearer:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: storage-auth-bearer
  # storage-home:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: storage-home
  # storage-users:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: storage-users
  # storage-public-link:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: storage-public-link
  # store:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: store
  # thumbnails:
  #   networks:
  #     ocis-net:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: thumbnails
  web:
    extends:
        file: docker-compose.base.yml
        service: ocis
    networks:
      ocis-int:
        aliases:
          - web.owncloud.test
    environment:
      # WEB_HTTP_ADDR: 0.0.0.0:9100
      WEB_HTTP_ADDR: web.owncloud.test:9100
      OCIS_COMMAND: web
      # override config.json
      WEB_UI_CONFIG: /config.json
    entrypoint:
      - /bin/sh
      - /entrypoint-override.sh
    ports:
      - "9100:9100"
  # webdav:
  #   extends:
  #       file: docker-compose.base.yml
  #       service: ocis
  #   environment:
  #     OCIS_COMMAND: webdav
  proxy:
    extends:
        file: docker-compose.base.yml
        service: ocis
    networks:
      ocis-int:
        aliases:
          - proxy-int.owncloud.test
      ocis-net:
        aliases:
          - proxy-ext.owncloud.test
    depends_on:
      - web
      # - idp
    environment:
      # OCIS_URL: ocis.owncloud.test
      PROXY_TLS: false
      # see https://github.com/owncloud/ocis/pull/675 /etc/ocis/proxy.json
      # PROXY_CONFIG_FILE: /proxy.json
      PROXY_LOG_LEVEL: debug
#      PROXY_CONFIG_FILE: "/var/tmp/ocis/.config/proxy-config.json"
      OCIS_COMMAND: proxy
      # PROXY_ENABLE_BASIC_AUTH: true
      # WEB_UI_CONFIG: /config.json
      # SERVICE_PRECONDITION: "ocis.owncloud.test:9100"
      SERVICE_PRECONDITION: "web.owncloud.test:9100"
    entrypoint:
      - /bin/sh
      - /entrypoint-override.wait.sh
    ports:
      - "9200:9200"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.entrypoints=https"
      # maps based on domain from https --> ocis.owncloud.test:9200
      - "traefik.http.routers.proxy.rule=Host(`${OCIS_DOMAIN:-ocis.owncloud.test}`)"
      - "traefik.http.routers.proxy.tls.certresolver=http"
      - "traefik.http.routers.proxy.service=proxy"
      - "traefik.http.services.proxy.loadbalancer.server.port=9200"
      # IMPORTANT - otherwise it will bind to "ocis-int" (although it should not be able to)
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_ocis-net"
volumes:
  certs:
  ocis-data:

networks:
  ocis-net:
    ipam:
      config:
        - subnet: 172.177.0.0/16
    # driver: "bridge"
  ocis-int:
    ipam:
      config:
        - subnet: 10.103.0.1/16
    # driver_opts:
      # com.docker.network.bridge.host_binding_ipv4: "1.2.3.4"
